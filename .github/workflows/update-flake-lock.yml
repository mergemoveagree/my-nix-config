name: update-flake-lock
on:
  workflow_dispatch: # allows manual triggering
  schedule:
    - cron: '0 7 * * *'

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  nix-matrix-and-update:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      pr-number: ${{ steps.update.outputs.pull-request-number }}
    steps:
      - uses: actions/checkout@v5
      - name: Check Nix flake inputs
        uses: DeterminateSystems/flake-checker-action@main
        with:
          fail-mode: true
          ignore-missing-flake-lock: false
          send-statistics: false
      - name: Install Nix
        uses: DeterminateSystems/determinate-nix-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      #- uses: DeterminateSystems/magic-nix-cache-action@main
      #  with:
      #    diagnostic-endpoint: ''
      #    use-flakehub: false
      - id: update
        uses: DeterminateSystems/update-flake-lock@v23
        with:
          nix-options: --accept-flake-config
          commit-msg: 'build(flake.lock): update flake.lock'
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix' --accept-flake-config)"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  nix-build:
    name: ${{ matrix.name }} (${{ matrix.system }})
    needs: nix-matrix-and-update
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-matrix-and-update.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v5
      - uses: wimpysworld/nothing-but-nix@main
        with:
          hatchet-protocol: 'holster'
      - name: Install Nix
        uses: DeterminateSystems/determinate-nix-action@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
      #- uses: DeterminateSystems/magic-nix-cache-action@main
      #  with:
      #    diagnostic-endpoint: ''
      #    use-flakehub: false
      - run: nix build -L '.#${{ matrix.attr }}' --accept-flake-config

  merge-pr:
    runs-on: ubuntu-latest
    needs: [nix-build, nix-matrix-and-update]
    steps:
      - uses: actions/checkout@v5
      - name: Merge
        run:
          gh pr merge --auto "${{ needs.nix-matrix-and-update.outputs.pr-number}}" --rebase
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        if: ${{ needs.nix-matrix-and-update.outputs.pr-number != '' }}
    
